<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="reviewMapper">

	<!-- 게시판 목록 -->
	<select id="reviewList" resultType="com.mycompany.myapp.vo.ReviewVO">
		select *
		from reviewTbl r left outer join userTbl u on r.uid = u.uid;
	</select>
	
	<!-- 게시판 작성 -->
	<insert id="reviewWrite">
		insert into reviewTbl(uid, title, content) values (#{uid}, #{title}, #{content})
	</insert>
	
	<!-- 게시판 상세 -->
	<select id="reviewDetail" resultType="com.mycompany.myapp.vo.ReviewVO">
		select r.reviewId, r.uid, r.title, r.content, r.viewCount, r.reviewedDate, r.revisedDate, r.deletedDate, r.isRevised, r.isDeleted, r.replyCount, u.nickname, u.address
		from reviewTbl r left outer join userTbl u on r.uid = u.uid
		where reviewId = #{reviewId}
	</select>
	
	<!-- 게시판 수정 -->
	<update id="reviewRevise">
		update reviewTbl 
		set title = #{title}, content = #{content}, isRevised = 1, revisedDate = now()
		where reviewId = #{reviewId}
	</update>
	
	<!-- 게시판 삭제 -->
	<update id="reviewDelete">
		update reviewTbl 
		set isDeleted = 1, deletedDate = now()
		where reviewId = #{reviewId}
	</update>
	
	<!-- 조회수 증가 -->
	<update id="reviewViews">
		update reviewTbl set viewCount = viewCount + 1 where reviewId = #{reviewId}
	</update>
	
	<!-- 검색 조건문 -->
	 <sql id="criteria">
<!--         <trim prefix="where (" suffix=")" prefixOverrides="OR"> -->
        <trim prefix="and (" suffix=")" prefixOverrides="OR">
            <foreach collection="typeArr" item="type">
                <trim prefix="OR">
                    <choose>
                        <when test="type == 'T'.toString()">
                            title like concat('%',#{keyword},'%') 
                        </when>
                        <when test="type == 'C'.toString()">
                            content like concat('%',#{keyword},'%') 
                        </when>
                        <when test="type == 'W'.toString()">
                            nickname like concat('%',#{keyword},'%' )
                        </when>
                        <when test="type == 'A'.toString()">
                            address like concat('%',#{keyword},'%' )
                        </when>
                    </choose>
                </trim>
            </foreach>
        </trim>
    </sql>
	
	<!-- 게시판 목록 + 페이징 + 검색 -->
<!-- 	<select id="reviewListPaging" resultType="com.mycompany.myapp.vo.ReviewVO"> -->
<!-- 		select * from ( -->
<!--                 select * -->
<!--                 from reviewTbl -->
<!--                 where isDeleted = 0 -->
<!--                 <if test="keyword != null"> -->
<!--                     <include refid="criteria"></include> -->
<!--                 </if> -->
<!--                 order by reviewId desc) as T1  -->
<!--         limit #{skip}, #{amount} -->
<!-- 	</select> -->
	<select id="reviewListPaging" resultType="com.mycompany.myapp.vo.ReviewVO">
		select *
		from (
				select r.reviewId, r.uid, r.title, r.content, r.viewCount, r.reviewedDate, r.revisedDate, r.deletedDate, r.isRevised, r.isDeleted, r.replyCount, u.nickname, u.address
				from reviewTbl r left outer join userTbl u on r.uid = u.uid
				where r.isDeleted = 0
				<if test="keyword != null">
                    <include refid="criteria"></include>
                </if>
				order by reviewId desc) as T1 
		limit #{skip}, #{amount}
	</select>
	
	<!-- 게시물 총 개수 -->
	<select id="reviewTotal" resultType="int">
		select count(*)
		from reviewTbl r left outer join userTbl u on r.uid = u.uid
		where isDeleted = 0
		<if test="keyword != null">
			<include refid="criteria"></include>
        </if>
	</select>
	
	<!-- 게시물 댓글 수 갱신 -->
	<update id="replyCountUpdate">
		UPDATE reviewTbl
		SET reviewTbl.replyCount = (SELECT count(replyId)
									FROM replyTbl
									WHERE reviewId = #{reviewId} AND isDeleted = 0)
		WHERE reviewTbl.reviewId = #{reviewId};
	</update>
	
</mapper>